{
  "swagger": "2.0",
  "info": {
    "title": "Pro Api For BeeHome",
    "version": "2.0",
    "contact": {
      "name": "Author",
      "url": "github.com/nguyentrunghieu15",
      "email": "thanime.15112002@gmail.com"
    }
  },
  "tags": [
    {
      "name": "ProService"
    },
    {
      "name": "HireService"
    },
    {
      "name": "GroupServiceManager"
    },
    {
      "name": "ServiceManagerService"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/group_services": {
      "get": {
        "operationId": "GroupServiceManager_ListGroupServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListGroupServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAtFrom",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAtTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.updatedAtFrom",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.updatedAtTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.sort",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NONE",
              "ASC",
              "DESC"
            ],
            "default": "NONE"
          },
          {
            "name": "pagination.sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GroupServiceManager"
        ]
      },
      "post": {
        "operationId": "GroupServiceManager_CreateGroupService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGroupServiceRequest"
            }
          }
        ],
        "tags": [
          "GroupServiceManager"
        ]
      }
    },
    "/api/v1/group_services/fulltext/search": {
      "get": {
        "operationId": "GroupServiceManager_FulltextSearchGroupServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListGroupServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Optional filter criteria (e.g., page number, limit)\n...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GroupServiceManager"
        ]
      }
    },
    "/api/v1/group_services/{id}": {
      "get": {
        "operationId": "GroupServiceManager_GetGroupService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GroupServiceManager"
        ]
      },
      "delete": {
        "operationId": "GroupServiceManager_DeleteGroupService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GroupServiceManager"
        ]
      },
      "patch": {
        "operationId": "GroupServiceManager_UpdateGroupService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupServiceManagerUpdateGroupServiceBody"
            }
          }
        ],
        "tags": [
          "GroupServiceManager"
        ]
      }
    },
    "/api/v1/hires": {
      "get": {
        "summary": "Retrieves all hires",
        "operationId": "HireService_FindAllHire",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/FindAllHireResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Optional filter by user ID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "providerId",
            "description": "Optional filter by provider ID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Optional filter by status (can be omitted)",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HireService"
        ]
      },
      "post": {
        "summary": "Creates a new hire",
        "operationId": "HireService_CreateHire",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateHireResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "providerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workTimeFrom",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workTimeTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "paymentMethodId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "HireService"
        ]
      }
    },
    "/api/v1/hires/{hireId}": {
      "delete": {
        "summary": "Deletes a hire (assuming it's idempotent)",
        "operationId": "HireService_DeleteHire",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hireId",
            "description": "ID of the Hire to delete",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "HireService"
        ]
      },
      "patch": {
        "summary": "Updates the status of a hire",
        "operationId": "HireService_UpdateStatusHire",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateStatusHireResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hireId",
            "description": "ID of the Hire to update",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "newStatus",
            "description": "Updated status value",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HireService"
        ]
      }
    },
    "/api/v1/providers": {
      "get": {
        "summary": "Find providers based on search criteria",
        "operationId": "ProService_FindPros",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/FindProsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.introduction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.years",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.postalCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.serviceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.sort",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NONE",
              "ASC",
              "DESC"
            ],
            "default": "NONE"
          },
          {
            "name": "pagination.sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProService"
        ]
      },
      "post": {
        "summary": "get token of provider",
        "operationId": "ProService_JoinAsProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/JoinAsProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/add-payment-method": {
      "post": {
        "summary": "Add a payment method for a professional",
        "operationId": "ProService_AddPaymentMethodPro",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddPaymentMethodProRequest"
            }
          }
        ],
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/add-service": {
      "post": {
        "summary": "Add a service offered by a professional",
        "operationId": "ProService_AddServicePro",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddServiceProRequest"
            }
          }
        ],
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/add-social-media": {
      "post": {
        "summary": "Add social media information for a professional",
        "operationId": "ProService_AddSocialMediaPro",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddSocialMediaProRequest"
            }
          }
        ],
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/delete-service": {
      "post": {
        "summary": "Delete a service offered by a professional",
        "operationId": "ProService_DeleteServicePro",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteServiceProRequest"
            }
          }
        ],
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/owner/profile": {
      "get": {
        "summary": "get provider profile of user logined",
        "operationId": "ProService_GetProviderProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProviderProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/reply-review": {
      "post": {
        "summary": "Reply to a review as a professional",
        "operationId": "ProService_ReplyReviewPro",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplyReviewProRequest"
            }
          }
        ],
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/review": {
      "post": {
        "summary": "Review a professional as a user",
        "operationId": "ProService_ReviewPro",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReviewProRequest"
            }
          }
        ],
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/signup": {
      "post": {
        "summary": "Sign up as a provider",
        "operationId": "ProService_SignUpPro",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProviderInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignUpProRequest"
            }
          }
        ],
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/{id}": {
      "get": {
        "summary": "Find providers based on search by id",
        "operationId": "ProService_FindProById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/FindProByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProService"
        ]
      },
      "delete": {
        "summary": "delete pro by id",
        "operationId": "ProService_DeleteProById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProService"
        ]
      },
      "put": {
        "summary": "Update information of a professional",
        "operationId": "ProService_UpdatePro",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProviderInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProServiceUpdateProBody"
            }
          }
        ],
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/providers/{id}/services": {
      "get": {
        "operationId": "ProService_GetAllServiceOfProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAllServiceOfProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProService"
        ]
      }
    },
    "/api/v1/services": {
      "get": {
        "operationId": "ServiceManagerService_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAtFrom",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAtTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.updatedAtFrom",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.updatedAtTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.sort",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NONE",
              "ASC",
              "DESC"
            ],
            "default": "NONE"
          },
          {
            "name": "pagination.sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceManagerService"
        ]
      },
      "post": {
        "operationId": "ServiceManagerService_CreateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateServiceRequest"
            }
          }
        ],
        "tags": [
          "ServiceManagerService"
        ]
      }
    },
    "/api/v1/services/fulltext/search": {
      "get": {
        "operationId": "ServiceManagerService_FulltextSearchServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Optional filter criteria (e.g., page number, limit)\n...",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceManagerService"
        ]
      }
    },
    "/api/v1/services/{id}": {
      "get": {
        "operationId": "ServiceManagerService_GetService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceManagerService"
        ]
      },
      "delete": {
        "operationId": "ServiceManagerService_DeleteService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceManagerService"
        ]
      },
      "patch": {
        "operationId": "ServiceManagerService_UpdateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceManagerServiceUpdateServiceBody"
            }
          }
        ],
        "tags": [
          "ServiceManagerService"
        ]
      }
    }
  },
  "definitions": {
    "AddPaymentMethodProRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "Request message for adding a payment method for a professional"
    },
    "AddServiceProRequest": {
      "type": "object",
      "properties": {
        "servicesId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Request message for adding a service offered by a professional"
    },
    "AddSocialMediaProRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      },
      "title": "Request message for adding social media information for a professional"
    },
    "CreateGroupServiceRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      }
    },
    "CreateHireResponse": {
      "type": "object",
      "properties": {
        "hire": {
          "$ref": "#/definitions/Hire",
          "title": "Created Hire object with generated ID"
        }
      }
    },
    "CreateServiceRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "groupServiceId": {
          "type": "string"
        }
      },
      "title": "Request message for creating a service"
    },
    "DeleteServiceProRequest": {
      "type": "object",
      "properties": {
        "servicesId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Request message for deleting a service offered by a professional"
    },
    "FilterGroupServices": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "createdAtFrom": {
          "type": "string"
        },
        "createdAtTo": {
          "type": "string"
        },
        "updatedAtFrom": {
          "type": "string"
        },
        "updatedAtTo": {
          "type": "string"
        }
      }
    },
    "FilterProRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "introduction": {
          "type": "string"
        },
        "years": {
          "type": "integer",
          "format": "int32"
        },
        "postalCode": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        }
      }
    },
    "FilterServices": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "createdAtFrom": {
          "type": "string"
        },
        "createdAtTo": {
          "type": "string"
        },
        "updatedAtFrom": {
          "type": "string"
        },
        "updatedAtTo": {
          "type": "string"
        }
      }
    },
    "FindAllHireResponse": {
      "type": "object",
      "properties": {
        "hires": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Hire"
          },
          "title": "List of Hire objects"
        }
      }
    },
    "FindProByIdResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/ProviderInfo"
        }
      },
      "title": "Response message for finding professional by ID"
    },
    "FindProsResponse": {
      "type": "object",
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ProviderViewInfor"
          }
        }
      },
      "title": "Response message for finding providers"
    },
    "GetAllServiceOfProviderResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Service"
          }
        }
      }
    },
    "GroupService": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      }
    },
    "GroupServiceManagerUpdateGroupServiceBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      }
    },
    "Hire": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "providerId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "workTimeFrom": {
          "type": "string"
        },
        "workTimeTo": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string"
        }
      }
    },
    "JoinAsProviderResponse": {
      "type": "object",
      "properties": {
        "providerToken": {
          "type": "string"
        }
      }
    },
    "ListGroupServicesResponse": {
      "type": "object",
      "properties": {
        "groupServices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GroupService"
          }
        }
      }
    },
    "ListServicesResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Service"
          }
        }
      },
      "title": "Response message for listing services"
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "int64"
        },
        "page": {
          "type": "string",
          "format": "int64"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "sort": {
          "$ref": "#/definitions/TypeSort"
        },
        "sortBy": {
          "type": "string"
        }
      }
    },
    "PaymentMethod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PostalCode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "countryCode": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "place": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "stateCode": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "provinceCode": {
          "type": "string"
        },
        "community": {
          "type": "string"
        },
        "communityCode": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ProServiceUpdateProBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "introduction": {
          "type": "string"
        },
        "years": {
          "type": "integer",
          "format": "int32"
        },
        "postalCode": {
          "type": "string"
        }
      },
      "title": "Request message for updating information of a professional"
    },
    "ProviderInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "introduction": {
          "type": "string"
        },
        "years": {
          "type": "integer",
          "format": "int32"
        },
        "postalCode": {
          "$ref": "#/definitions/PostalCode"
        },
        "numHires": {
          "type": "integer",
          "format": "int32"
        },
        "socialMedias": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SocialMedia"
          }
        },
        "paymentMethod": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PaymentMethod"
          }
        }
      }
    },
    "ProviderProfileResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/ProviderInfo"
        }
      }
    },
    "ProviderViewInfor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "introduction": {
          "type": "string"
        },
        "years": {
          "type": "integer",
          "format": "int32"
        },
        "postalCode": {
          "$ref": "#/definitions/PostalCode"
        },
        "numHires": {
          "type": "integer",
          "format": "int32"
        },
        "rating": {
          "$ref": "#/definitions/ProviderViewInforOverviewRating"
        }
      }
    },
    "ProviderViewInforOverviewRating": {
      "type": "object",
      "properties": {
        "numRating": {
          "type": "integer",
          "format": "int32"
        },
        "avgRating": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReplyReviewProRequest": {
      "type": "object",
      "properties": {
        "reviewId": {
          "type": "string"
        },
        "reply": {
          "type": "string"
        }
      },
      "title": "Request message for replying to a review as a professional"
    },
    "ReviewProRequest": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string"
        },
        "rating": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        }
      },
      "title": "Request message for reviewing a professional as a user"
    },
    "Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "title": "double price = 10;\nstring unit_price = 11;"
        }
      }
    },
    "ServiceManagerServiceUpdateServiceBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      },
      "title": "Request message for updating a service"
    },
    "SignUpProRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "introduction": {
          "type": "string"
        },
        "years": {
          "type": "integer",
          "format": "int32"
        },
        "postalCode": {
          "type": "string"
        }
      },
      "title": "Request message for signing up as a professional"
    },
    "SocialMedia": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "providerId": {
          "type": "string"
        }
      }
    },
    "TypeSort": {
      "type": "string",
      "enum": [
        "NONE",
        "ASC",
        "DESC"
      ],
      "default": "NONE"
    },
    "UpdateStatusHireResponse": {
      "type": "object",
      "properties": {
        "hire": {
          "$ref": "#/definitions/Hire",
          "title": "Updated Hire object reflecting the new status"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "ProviderIdHeader": {
      "type": "apiKey",
      "name": "Provider-Id",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": [],
      "ProviderIdHeader": []
    }
  ],
  "externalDocs": {
    "description": "More about gRPC-Gateway",
    "url": "https://github.com/grpc-ecosystem/grpc-gateway"
  }
}
