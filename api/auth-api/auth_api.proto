syntax = "proto3";

option go_package="github.com/nguyentrunghieu15/be-beehome-prj/proto/authapi";


import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Auth Api For BeeHome";
    version: "2.0";
    contact: {
      name: "Author";
      url: "github.com/nguyentrunghieu15";
      email: "thanime.15112002@gmail.com";
    };
  };
  // Overwriting host entry breaks tests, so this is not done here.
  external_docs: {
    url: "https://github.com/grpc-ecosystem/grpc-gateway";
    description: "More about gRPC-Gateway";
  }
  
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "ApiKeyAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
      }
    }
  }
  security: {
    security_requirement: {
      key: "ApiKeyAuth";
      value: {};
    }
  }
};

service LoginService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Authentication"
    description: "Authentication user"
  };
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body:"*"
    };
  }

  rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse){
    option (google.api.http) = {
        post: "/api/v1/auth/refresh-token"
        body:"*"
    };
  };

  rpc ForgotPassword(ForgotPasswordRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
        post: "/api/v1/auth/forgot-password"
        body:"*"
    };
  }

  rpc ResetPassword (ResetPasswordRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
        post: "/api/v1/auth/reset-password"
        body:"*"
    };
  };

  rpc SignUp (SignUpRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
        post: "/api/v1/auth/sign-up"
        body:"*"
    };
  };
}

message LoginRequest {
    string email = 1;
    string password = 2;
    optional string captcha = 3;
}

message LoginResponse {
    string access_token = 1;
    int64 expire_time = 2;
    string refresh_token = 3;
    string type_token = 4;
}

message RefreshTokenRequest {
    string refresh_token = 1;
}

message RefreshTokenResponse {
    string acess_token = 1;
}

message ForgotPasswordRequest {
    string email = 1;
}

message ResetPasswordRequest {
    string new_password = 1;
    string confirm_password = 2;
    string reset_token = 3;
}

message SignUpRequest {
  string email = 1;
  string password = 2;
  string phone = 3;
  string first_name = 4;
  string last_name = 5;
}
