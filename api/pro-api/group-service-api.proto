syntax = "proto3";

option go_package="github.com/nguyentrunghieu15/be-beehome-prj/proto/proapi";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "api/pro-api/message.proto";

message FilterGroupServices {
    optional string name = 1;
    optional string created_at_from = 2;
    optional string created_at_to = 3;
    optional string updated_at_from = 4;
    optional string updated_at_to = 5;
}

message ListGroupServicesRequest {
    optional FilterGroupServices filter = 1;
    optional Pagination pagination = 2;
}

// Request message for listing services
message FulltextSearchGroupServicesRequest {
    // Optional filter criteria (e.g., page number, limit)
    // ...
    string name = 1;

}

message ListGroupServicesResponse {
    repeated GroupService group_services = 1;
}

message GetGroupServiceRequest {
    string id = 1;
}

message CreateGroupServiceRequest {
    string name = 1;
    string detail = 2;
}

message UpdateGroupServiceRequest {
    string id = 1;
    string name = 2;
    string detail = 3;
}

message DeleteGroupServiceRequest {
    string id = 1;
}

service GroupServiceManager {
    rpc ListGroupServices(ListGroupServicesRequest) returns (ListGroupServicesResponse) {
        option (google.api.http) = {
            get: "/api/v1/group_services"
        };
    }

    rpc FulltextSearchGroupServices(FulltextSearchGroupServicesRequest) returns (ListGroupServicesResponse) {
        option (google.api.http) = {
        get: "/api/v1/group_services/fulltext/search"
        };
    }

    rpc GetGroupService(GetGroupServiceRequest) returns (GroupService) {
        option (google.api.http) = {
            get: "/api/v1/group_services/{id}"
        };
    }

    rpc CreateGroupService(CreateGroupServiceRequest) returns (GroupService) {
        option (google.api.http) = {
            post: "/api/v1/group_services"
            body: "*"
        };
    }

    rpc UpdateGroupService(UpdateGroupServiceRequest) returns (GroupService) {
        option (google.api.http) = {
            patch: "/api/v1/group_services/{id}"
            body: "*"
        };
    }

    rpc DeleteGroupService(DeleteGroupServiceRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/group_services/{id}"
        };
    }
}
