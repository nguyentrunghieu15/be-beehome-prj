syntax = "proto3";

option go_package="github.com/nguyentrunghieu15/be-beehome-prj/proto/proapi";


// import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// import "google/protobuf/empty.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Pro Api For BeeHome";
    version: "2.0";
    contact: {
      name: "Author";
      url: "github.com/nguyentrunghieu15";
      email: "thanime.15112002@gmail.com";
    };
  };
  // Overwriting host entry breaks tests, so this is not done here.
  external_docs: {
    url: "https://github.com/grpc-ecosystem/grpc-gateway";
    description: "More about gRPC-Gateway";
  }
  
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "ApiKeyAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
      }
    }
  }
  security: {
    security_requirement: {
      key: "ApiKeyAuth";
      value: {};
    }
  }

};


service ProService {
  rpc FindPros (FindProsRequest) returns (FindProsResponse);
  rpc SignUpPro (SignUpProRequest) returns (SignUpProResponse);
  rpc ChangeNamePro (ChangeNameProRequest) returns (ChangeNameProResponse);
  rpc EditIntroductionPro (EditIntroductionProRequest) returns (EditIntroductionProResponse);
  rpc UpdatePro (UpdateProRequest) returns (UpdateProResponse);
  rpc AddPaymentMethodPro (AddPaymentMethodProRequest) returns (AddPaymentMethodProResponse);
  rpc ReplyReviewPro (ReplyReviewProRequest) returns (ReplyReviewProResponse);
  rpc ReviewPro (ReviewProRequest) returns (ReviewProResponse);
  rpc AddServicePro (AddServiceProRequest) returns (AddServiceProResponse);
  rpc AddSocialMediaPro (AddSocialMediaProRequest) returns (AddSocialMediaProResponse);
}